[tox]
isolated_build = true
envlist = build,lint,test,docs

[testenv]
setenv =
    PYTHONPATH={toxinidir}/src
skip_install = true

[testenv:test]
deps =
    -r{toxinidir}/requirements.txt
    coverage
    pytest
    pytest-cov
    hypothesis
commands_pre =
    coverage erase
commands =
    pytest --cov --cov-report=term-missing --cov-append --cov-config=.coveragerc --hypothesis-show-statistics {posargs}
commands_post = 
    coverage report
    coverage html
    coverage xml

[testenv:lint]
deps =
    flake8>=4
    flake8-print>=5
    flake8-bugbear
    pygments
    isort
commands =
    flake8 {posargs:src tests setup.py docs}
    isort --verbose --check-only --diff {posargs:src tests setup.py docs/conf.py}

[testenv:build]
deps =
    setuptools
    wheel
    twine
    docutils
    check-manifest
    readme-renderer
commands_pre = python {toxinidir}/devtools/clean_dist_check.py
commands =
    python --version
    python setup.py sdist bdist_wheel
    twine check dist/*.whl
    twine check dist/*.tar.gz
    check-manifest {toxinidir}
commands_post = python {toxinidir}/devtools/clean_dist_check.py

[testenv:docs]
deps =
    -r{toxinidir}/requirements.txt
    sphinx
    sphinx_rtd_theme
commands =
    sphinx-build {posargs:-E -W} -b html docs dist/docs

[flake8]
max_line_length = 80
hang-closing = true
ignore = 
    W293
    W503
    D412
    D105
per-file-ignores = setup.py:E501
docstring-convention = numpy
exclude = src/runcrate/__init__.py

[isort]
skip = __init__.py
line_length = 80
indent = 4
multi_line_output = 8
include_trailing_comma = true
lines_after_imports = 2
sections=FUTURE,STDLIB,THIRDPARTY,FIRSTPARTY,LOCALFOLDER
known_first_party = runcrate
known_third_party =
    hypothesis
    pytest
